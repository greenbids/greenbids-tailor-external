name: Create and publish a Docker image

on:
  workflow_call:
    inputs:
      app-version:
        type: string
        description: Version number of the containerized application
        required: true
      version:
        type: string
        description: Version number of the image
        required: true
  workflow_dispatch:
    inputs:
      app-version:
          type: string
          description: Version number of the packaged application
          required: true
      version:
          type: string
          description: Version number of the image and chart
          required: true


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: greenbids/tailor

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    environment:
      name: container-registry
      url: http://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ inputs.version }}
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Wait for package availability
        if: ${{ github.event_name == 'push' }}
        run: |2
          bash -sx <<EOT
          try=10
          while [ "\$try" -gt 0 ]; do
            sleep 5
            url="\$(curl https://${{ github.ref_type != 'tag' && 'test.' || '' }}pypi.org/simple/greenbids-tailor/ | grep greenbids_tailor-${{ inputs.app-version }} | sed -Ee 's/.*href="([^"]+)".*/\\1/')"
            if [ "\$url" ]; then
              curl -I "\$url" | grep -q -E '^HTTP.*200' && exit 0
            fi
            try=\$(( try - 1 ))
          done
          exit 1
          EOT

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: container/
          push: ${{ github.event_name == 'push' }}
          platforms: linux/amd64,linux/arm64
          build-args: |-
            PYTHON_VERSION=3.12
            TAILOR_VERSION_SPEC=${{ github.event_name == 'push' && format('=={0}', inputs.app-version)  || '' }}
            PIP_EXTRA_ARGS=${{
              github.ref_type != 'tag'
              && '--pre --index-url=https://test.pypi.org/simple --extra-index-url=https://pypi.org/simple'
              || '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      # Waiting for public visibility
      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
