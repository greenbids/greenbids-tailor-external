name: Create and publish a Docker image

on:
  workflow_run:
    workflows:
      - Create and publish Python package
    types:
      - completed
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: greenbids/tailor

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: container/
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            PYTHON_VERSION=3.12
            TAILOR_VERSION=${{ steps.meta.outputs.tags[0] }}
            PIP_INDEX_URL=${{ startsWith(github.ref, 'refs/tags/') && 'https://pypi.org' || 'https://test.pypi.org' }}/simple
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      # Waiting for public visibility
      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
